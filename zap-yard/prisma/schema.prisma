// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  directUrl         = env("DIRECT_URL")
}

model User {
  id String @id @unique 

  email String
  firstName String
  lastName String
  profileImage String?
  Location Location[]
  Favourite Favourite[]
  Reservation Reservation[]
}

model Location {
  id String @id @default(uuid())

  title String?
  categoryName String?
  description String?
  address String?
  country String?
  photo String?
  price Int?
  chargerquantity Int?
  Favourite Favourite[]
  Reservation Reservation[]

  addedCategory Boolean @default(false)Â 
  addedDescription Boolean @default(false)
  addedLocation Boolean @default(false)

  createdAT DateTime @default(now())
  User User? @relation(fields: [userId], references: [id])
  userId String?
}

model Favourite {
  id String @id @default(uuid())

  User User? @relation(fields:[userId], references: [id])
  userId String? 
  Location Location? @relation(fields: [locationId], references: [id])
  locationId String? 

  createdAt DateTime @default(now())

}

model Reservation {
  id String @id @default(uuid())

  startDate DateTime 
  endDate DateTime
  createdAt DateTime @default(now())

  User User? @relation(fields: [userId], references: [id])
  userId String?
  Location Location? @relation(fields: [locationId], references: [id])
  locationId String?
}